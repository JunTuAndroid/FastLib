apply plugin: 'com.android.application'


android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    defaultConfig {
        applicationId "com.aries.library.fast.demo"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField "String", "BASE_URL", "\"https://api.douban.com/\""
    }
    signingConfigs {
        release {
            storeFile file('../fast.jks')
            storePassword 'fast123#@!'
            keyAlias 'fast'
            keyPassword 'fast123#@!'
        }
    }
//    忽略打包资源错误
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    buildTypes {
        debug {
            //是否debug模式用于控制是否打印log等
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        release {
            debuggable false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        if (variant.buildType.name.equals('release')) {
                            def fileName = "FastLib_v${defaultConfig.versionName}_${releaseTime()}.apk"
                            outputFileName = fileName
                        }
                    }
                }
            }

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':library')

    //设置界面Item库
    //以下库library里使用provided只是编译使用时需根据项目选择相应版本
    api(rootProject.ext.dependencies["design"]) {
        exclude module: "support-compat"
        exclude module: "support-annotations"
        exclude module: "appcompat-v7"
        exclude module: "recyclerview-v7"

    }
    api rootProject.ext.dependencies["appcompat"]

    api rootProject.ext.dependencies["recyclerview"]
    //万能适配器--一般都需要吧
    api rootProject.ext.dependencies["BaseRecyclerViewAdapterHelper"]
    //webView库 继承FastWebActivity需要,不需要内置WebView可以不compile
    api rootProject.ext.dependencies["agentweb"]
    //webView提供下载功能
    api rootProject.ext.dependencies["agentweb-downLoad"]
//    compile 'com.just.agentweb:filechooser:4.0.2'
    //下拉刷新库注意刷新头SmartRefreshHeader版本最好对应尤其头版本不要低于SmartRefreshLayout版本
    api rootProject.ext.dependencies["smartRefreshLayout"]
    //以上库library里使用provided只是编译使用时需根据项目选择相应版本
    api rootProject.ext.dependencies["bgaBanner"]
    api rootProject.ext.dependencies["smartRefreshLayoutHeader"]
    api rootProject.ext.dependencies["superTextView"]
    api rootProject.ext.dependencies["FlycoLabelView"]
    //图片加载 4.X
    annotationProcessor rootProject.ext.dependencies["glideCompiler"]
    annotationProcessor rootProject.ext.dependencies["butterknifeCompiler"]
}


def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH-mm", TimeZone.getTimeZone("GMT+8"))
}
